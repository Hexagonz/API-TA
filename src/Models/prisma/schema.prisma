// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  name      String   @db.VarChar(100)
  role      Role     @default(admin)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshTokens Refresh_Token?
}

model Refresh_Token {
  id        Int      @id @default(autoincrement())
  id_user   Int      @unique
  user      Users    @relation(fields: [id_user], references: [id], onUpdate: Cascade, onDelete: Cascade)
  token     String   @db.Text
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Kelas {
  id_kelas     Int    @id @default(autoincrement())
  nama_kelas   String @db.VarChar(20)
  kelas_romawi String @db.VarChar(5)

  siswa  Siswa[]
  jadwal Jadwal[]
  @@map("kelas")
}

model Jurusan {
  id_jurusan   Int    @id @default(autoincrement())
  nama_jurusan String @db.VarChar(10)
  deskripsi    String @db.VarChar(50)

  siswa Siswa[]
  ruang Ruang_Kelas[]
}

model Mata_Pelajaran {
  id_mapel   Int    @id @default(autoincrement())
  nama_mapel String @db.VarChar(30)
  deskripsi  String @db.VarChar(50)
  
  guru   Guru[]
}

model Guru {
  id_guru   Int    @id @default(autoincrement())
  nip       String @unique @db.VarChar(20)
  nama_guru String @db.VarChar(60)
  id_mapel  Int

  mapel Mata_Pelajaran @relation(fields: [id_mapel], references: [id_mapel], onUpdate: Cascade, onDelete: Cascade)

  jadwal Jadwal[]
  @@map("guru")
}

model Ruang_Kelas {
  id_ruang Int @id @default(autoincrement())
  nomor_ruang Int @db.TinyInt
  id_jurusan Int

  jurusan   Jurusan   @relation(fields: [id_jurusan], references: [id_jurusan], onUpdate: Cascade, onDelete: Cascade)
  siswa Siswa[]
  jadwal Jadwal[]

  @@map("ruang_Kelas")
}

model Siswa {
  id_siswa   Int    @id @default(autoincrement())
  nisn       String @unique @db.VarChar(20)
  nama_siswa String @db.VarChar(60)
  no_absen   Int    @db.TinyInt
  id_kelas   Int
  id_jurusan Int
  id_ruang   Int
  
  kelas   Kelas   @relation(fields: [id_kelas], references: [id_kelas], onUpdate: Cascade, onDelete: Cascade)
  jurusan Jurusan @relation(fields: [id_jurusan], references: [id_jurusan], onUpdate: Cascade, onDelete: Cascade)
  ruang Ruang_Kelas @relation(fields: [id_ruang], references: [id_ruang], onUpdate: Cascade, onDelete: Cascade)

  presensi Presensi[]
}

model Jadwal {
  id_jadwal   Int      @id @default(autoincrement())
  id_kelas    Int
  id_guru     Int
  id_ruang    Int
  hari        Hari
  jam_mulai   DateTime @db.Time()
  jam_selesai DateTime @db.Time()
  
  ruang  Ruang_Kelas  @relation(fields: [id_ruang], references: [id_ruang], onUpdate: Cascade, onDelete: Cascade)
  kelas   Kelas          @relation(fields: [id_kelas], references: [id_kelas], onUpdate: Cascade, onDelete: Cascade )
  guru    Guru           @relation(fields: [id_guru], references: [id_guru] , onUpdate: Cascade, onDelete: Cascade)
  absensi Presensi[]

  @@map("jadwal")
}

model Presensi {
  id_presensi Int       @id @default(autoincrement())
  id_siswa    Int
  id_jadwal   Int
  keterangan  String?
  tanggal     DateTime? @db.DateTime()
  waktu       DateTime? @db.Time()
  hari        Hari?
  status      keterangan? 
  gambar      String?   @db.VarChar(100)
  progres     Progres   @default(idle)
  uploaded_at DateTime @default(now())

  
  siswa  Siswa  @relation(fields: [id_siswa], references: [id_siswa], onUpdate: Cascade, onDelete: Cascade)
  jadwal Jadwal @relation(fields: [id_jadwal], references: [id_jadwal], onUpdate: Cascade, onDelete: Cascade)
}

enum Progres {
  idle
  pending
  success
}

enum keterangan {
  masuk
  izin
  alpa
  
}

enum Hari {
  Senin
  Selasa
  Rabu
  Kamis
  Jumat
}

enum Role {
  admin
  guru
  siswa
  super_admin
}
